

variable "zone_id" {
  description = "The id of your hosted zone you want to apply for your project."
  type        = string
  default      = "us-west-1"
}


module "website_s3_bucket" {
  source         = "./modules/AWS-FrontEnd"
  //zone_id        = var.zone_id
  //domain_name    = terraform.workspace == "prod" ? "goexperts.net" : "${terraform.workspace}.goexperts.net"
  //bucket_name    = terraform.workspace == "prod" ? "goexperts.net" : "${terraform.workspace}.goexperts.net"
  //common_tags    = { Project = "goexperts-${terraform.workspace}" }
  //region         = "us-west-1"
  //environment    = terraform.workspace
}

=========


//create dynamodb for tfstate remote management
resource "aws_dynamodb_table" "dynamodb-terraform-state-lock" {
  name         = "terraform-state-lock-dynamodb"
  billing_mode = "PAY_PER_REQUEST"
  hash_key     = "LockID"
  attribute {
    name = "LockID"
    type = "S"
  }
}

//output the statument of tfstate lock
output "dynamodb_table_name" {
  value       = aws_dynamodb_table.dynamodb-terraform-state-lock.name
  description = "The name of the DynamoDB table"
}


# S3 bucket for website.
resource "aws_s3_bucket" "P3-Pord-FE-Bucket" {
  bucket = var.bucket_name
  acl    = "public-read"
  policy = templatefile("./s3-permissionpolicy.json",{bucket=var.bucket_name})
  
/*  versioning_configuration{
    status = "Enabled"
  }
*/

  //static web hosting
  website {
    index_document = "index.html"
    error_document = "index.html"
  } 
}

resource "aws_s3_bucket" "backup_bucket_name" {
  bucket = var.backup_bucket_name
  acl    = "public-read"
  policy = templatefile("${path.module}/s3-permissionpolicy.json", { bucket = var.backup_bucket_name })
  
/*  versioning_configuration{
    status = "Enabled"
  }
*/
  //static web hosting
  website {
    index_document = "index.html"
    error_document = "index.html"
  } 
}